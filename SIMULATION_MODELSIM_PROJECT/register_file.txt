library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;


entity register_file is

port(
	clk:in std_logic;
	rs_add: in std_logic_vector(1 downto 0);
	rt_add: in std_logic_vector(1 downto 0);
	rd_add: in std_logic_vector(1 downto 0);
	rs: out std_logic_vector(7 downto 0);
	rt: out std_logic_vector(7 downto 0);
	wr_data: in std_logic_vector(7 downto 0));

end register_file;



architecture rf_behav of register_file is
type registers is array(0 to 3) of std_logic_vector(7 downto 0);


signal reg:registers :=(
	"11000010",
	"11010101",
	"11101011",
	"01000111");

begin
	process(clk)
begin

if falling_edge(clk) then
	reg(to_integer(unsigned(rd_add))) <= wr_data;
end if;

end process;

rs<= reg(to_integer(unsigned(rs_add)));
rt<= reg(to_integer(unsigned(rt_add)));

end rf_behav;